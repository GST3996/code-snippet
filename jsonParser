import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import java.util.Iterator;
import java.util.Map;

public class JsonFlattener {
    
    private static final ObjectMapper objectMapper = new ObjectMapper();
    
    public static String extractPrimitives(String json) throws Exception {
        JsonNode rootNode = objectMapper.readTree(json);
        ObjectNode filteredNode = objectMapper.createObjectNode();
        
        extractPrimitiveFields(rootNode, filteredNode);
        
        return objectMapper.writeValueAsString(filteredNode);
    }
    
    private static void extractPrimitiveFields(JsonNode source, ObjectNode target) {
        Iterator<Map.Entry<String, JsonNode>> fields = source.fields();
        while (fields.hasNext()) {
            Map.Entry<String, JsonNode> field = fields.next();
            if (field.getValue().isValueNode()) { // Checks if it's a primitive value
                target.set(field.getKey(), field.getValue());
            }
        }
    }
    
    public static void main(String[] args) throws Exception {
        String jsonInput = "{" +
                "\"name\": \"John\", " +
                "\"age\": 30, " +
                "\"address\": {\"city\": \"New York\", \"zip\": 10001}, " +
                "\"email\": \"john.doe@example.com\" " +
                "}";
        
        String result = extractPrimitives(jsonInput);
        System.out.println(result); // Output: {"name":"John","age":30,"email":"john.doe@example.com"}
    }
}
