import org.apache.kafka.clients.admin.AdminClient;
import org.apache.kafka.clients.admin.AdminClientConfig;
import org.apache.kafka.common.acl.AclBinding;
import org.apache.kafka.common.acl.AclOperation;
import org.apache.kafka.common.acl.AclPermissionType;
import org.apache.kafka.common.resource.ResourcePattern;
import org.apache.kafka.common.resource.ResourceType;

import java.util.Collection;
import java.util.Collections;
import java.util.Properties;

public class KafkaAclChecker {

    private static final String BOOTSTRAP_SERVERS = "broker1:9093,broker2:9093";
    private static final String TOPIC_NAME = "test-topic";

    private static Properties getAdminProperties() {
        Properties props = new Properties();
        props.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, BOOTSTRAP_SERVERS);
        props.put("security.protocol", "SSL"); // Change to SASL_SSL if using SASL
        props.put("ssl.keystore.location", "/path/to/client.keystore.jks");
        props.put("ssl.keystore.password", "keystore-password");
        props.put("ssl.truststore.location", "/path/to/client.truststore.jks");
        props.put("ssl.truststore.password", "truststore-password");
        return props;
    }

    public static void fetchAcls() {
        try (AdminClient adminClient = AdminClient.create(getAdminProperties())) {
            Collection<AclBinding> acls = adminClient.describeAcls(
                    new org.apache.kafka.common.acl.AclBindingFilter(
                            new org.apache.kafka.common.resource.ResourcePatternFilter(
                                    ResourceType.TOPIC, TOPIC_NAME, ResourcePattern.WildcardType.LITERAL),
                            null)
            ).values().get();

            System.out.println("ACLs for topic: " + TOPIC_NAME);
            for (AclBinding acl : acls) {
                System.out.println("Principal: " + acl.entry().principal() +
                        ", Operation: " + acl.entry().operation() +
                        ", Permission: " + acl.entry().permissionType());
            }
        } catch (Exception e) {
            System.err.println("Failed to fetch ACLs: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        fetchAcls();
    }
}
